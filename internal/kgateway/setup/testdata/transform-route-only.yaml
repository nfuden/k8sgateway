kind: Gateway
apiVersion: gateway.networking.k8s.io/v1
metadata:
  name: http-gw-for-test
  namespace: gwtest
spec:
  gatewayClassName: kgateway
  listeners:
  - protocol: HTTP
    port: 8080
    name: http
    allowedRoutes:
      namespaces:
        from: All
---
apiVersion: v1
kind: Service
metadata:
  name: reviews
  namespace: gwtest
  labels:
    app: reviews
    service: reviews
spec:
  ports:
    - name: http
      port: 8080
      targetPort: 8080
  selector:
    app: reviews
---
apiVersion: discovery.k8s.io/v1
kind: EndpointSlice
metadata:
  name: reviews-slice
  namespace: gwtest
  labels:
    kubernetes.io/service-name: reviews
    app: reviews
    service: reviews
addressType: IPv4
endpoints:
  - addresses:
      - 10.244.1.11
    conditions:
      ready: true
    nodeName: worker
    targetRef:
      kind: Pod
      name: reviews-1
      namespace: gwtest
ports:
  - name: http
    port: 8080
    protocol: TCP
---
apiVersion: gateway.networking.k8s.io/v1beta1
kind: HTTPRoute
metadata:
  name: happypath-request
  namespace: gwtest
spec:
  parentRefs:
    - name: http-gw-for-test
      namespace: gwtest
  hostnames:
    - "www.example-request.com"
  rules:
  - backendRefs:
      - name: reviews
        port: 8080
    filters:
    - type: ExtensionRef
      extensionRef:
        group: gateway.kgateway.dev
        kind: TrafficPolicy
        name: transform-request-for-route
---
apiVersion: gateway.networking.k8s.io/v1beta1
kind: HTTPRoute
metadata:
  name: happypath-response
  namespace: gwtest
spec:
  parentRefs:
    - name: http-gw-for-test
      namespace: gwtest
  hostnames:
    - "www.example-response.com"
  rules:
  - backendRefs:
      - name: reviews
        port: 8080
    filters:
    - type: ExtensionRef
      extensionRef:
        group: gateway.kgateway.dev
        kind: TrafficPolicy
        name: transform-response-for-route
---
apiVersion: gateway.networking.k8s.io/v1beta1
kind: HTTPRoute
metadata:
  name: happypath-request-response
  namespace: gwtest
spec:
  parentRefs:
    - name: http-gw-for-test
      namespace: gwtest
  hostnames:
    - "www.example-request-response.com"
  rules:
  - backendRefs:
      - name: reviews
        port: 8080
    filters:
    - type: ExtensionRef
      extensionRef:
        group: gateway.kgateway.dev
        kind: TrafficPolicy
        name: transform-request-response-for-route
---
apiVersion: gateway.kgateway.dev/v1alpha1
kind: TrafficPolicy
metadata:
  name: transform-request-response-for-route
  namespace: gwtest
spec:
  transformation:
    request:
      add:
        - name: "x-greatness"
          value: '{{ length(headers(":path")) }}'
      body:
        value: 'request-response'
    response:
      add:
        - name: "original-greatness"
          value: '{{request_headers("x-greatness")}}'
      body:
        value: '{{ body }}'
        parseAs: 'AsJson'
---
apiVersion: gateway.kgateway.dev/v1alpha1
kind: TrafficPolicy
metadata:
  name: transform-request-for-route
  namespace: gwtest
spec:
  transformation:
    request:
      set:
        - name: "x-greatness"
          value: '{{length(headers(":path")) }}'
      body:
        parseAs: "AsJson" # should mean nothing in output instead of dontparse
        value: "requested"
---
apiVersion: gateway.kgateway.dev/v1alpha1
kind: TrafficPolicy
metadata:
  name: transform-response-for-route
  namespace: gwtest
spec:
  transformation:
    response:
      add:
        - name: "original-greatness"
          value: '{{request_headers("x-greatness")}}'
